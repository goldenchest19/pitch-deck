class BusinessLogic:
    # название проекта. слоагн
    def first_slide(self, name, slogan=None):
        if slogan == None:
            #     make generation slogan
            pass
        return name, slogan

    # проблемы проекта, целевая аудитория
    def second_slide(self, problems, target_audience):
        #         тут логика следующая: пользователь может задать проблемы, а также может их не задать
        # также и с целевой аудиторией, моя идея в том, что если пользователь задает параметры, то мы их возвращаем на фронт
        # если пользваотель не задает, то мы генерируем те которые не задал
        pass

    # описание проекта и ценностное предложение стартапа
    def third_slide(self):
        # описание проекта наверное пропускаем???
        pass

    # решение проблем
    def fourth_slide(self, solves):
        # можем ничего не делать с решениями, однако можем их сгенерировать на основе проблем пользователя
        pass

    # рынок
    def fifth_slide(self):
        # мне пока не понятно че тут делаем
        pass

    # конкуренты
    def sixth_slide(self, competitors):
        # на первой стадии можем просить их от пользователя, но я все таки предлагаю делать номральный парсер
        pass

    # бизнс модель и ценообразование
    def seven_slide(self):
        # здесь что то надо считать
        pass

    # •Трекшн и финансы (Трекшн, партнерства, выручка,
    # количество клиентов, CAC - LTV)
    def eighth_slide(self):
        pass

    # Команда + Борд (Команда проекта + бэкграунд;
    # текущие инвесторы, эдвайзеры
    def nine_slide(self):
        # я думаю что здесь всю логику на фронте оставим
        pass

    # Инвестиционный раунд (Объем необходимых
    # инвестиций, куда будут направлены средства)
    def tenth_slide(self):
        # думаю здесь тоже онли фронт
        pass

    # Roadmap
    def eleven_slide(self):
        # тоже нужен фронт, но нужен дизайн
        pass

    # контактная информация
    def twelve_slide(self):
        # здесь точно фронт
        pass
